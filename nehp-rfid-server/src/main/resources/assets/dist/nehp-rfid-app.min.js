/*! nehp-rfid-app 04-11-2014 */
window.App=Ember.Application.create({LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_ACTIVE_GENERATION:!0,LOG_RESOLVER:!0,rootElement:"body"}),App.ApplicationAdapter=DS.RESTAdapter.extend({namespace:"service"}),App.ApiKeyAdapter=DS.LSAdapter.extend({namespace:"nehp-rfid"}),App.Store=DS.Store.extend({revision:12,adapter:App.ApplicationAdapter.create()}),App.SimpledateTransform=DS.Transform.extend({deserialize:function(a){var b=jstz.determine();return a?moment.tz(a,b.name()).format("YYYY-MM-DD HH:mm:ss z"):a},serialize:function(a){return a?moment.utc(a).toDate():a}}),App.NotifyAlertComponent=Ember.Component.extend({classNameBindings:[":notify","isOpaque"],isOpaque:!1,timeoutId:null,hideAfterMs:5e3,didInsertElement:function(){this.set("closed",!1),this.set("timeoutId",setTimeout(function(){this.send("close")}.bind(this),this.get("hideAfterMs"))),Ember.run.later(this,function(){this.set("isOpaque",!0)},1)},actions:{close:function(){this.set("isOpaque, false"),setTimeout(function(){this.set("notification.closed",!0),clearTimeout(this.get("timeoutId"))}.bind(this),300)}}});var config={baseURL:"54.85.61.143:8080"};App.ApplicationController=Ember.Controller.extend({needs:["sessions"],notification:{type:null,title:null,message:null,closed:!0},currentUser:function(){return this.get("controllers.sessions.currentUser")}.property("controllers.sessions.currentUser"),isAdmin:function(){return this.get("controllers.sessions.admin")}.property("controllers.sessions.admin"),isAuthenticated:function(){return!Ember.isEmpty(this.get("controllers.sessions.currentUser"))}.property("controllers.sessions.currentUser"),actions:{setNotification:function(a,b,c){var d={type:a,title:b,message:c,closed:!1};this.set("notification",d)},testNotification:function(){this.send("setNotification","success","Success","Yay you did it.")}}}),App.IndexController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!1}),App.ItemsController=Ember.ArrayController.extend({sortProperties:["rfid"],stage:"ALL",sortedColumn:function(){var a=this.get("sortProperties");return a?a.get("firstObject"):void 0}.property("sortProperties.[]"),filteredItems:function(){var a=this.get("stage"),b=this.get("arrangedContent");return"ALL"==a?b:b.filter(function(b){return b.get("current_stage")==a})}.property("stage","arrangedContent"),toggleSort:function(a){this.get("sortedColumn")==a?this.toggleProperty("sortAscending"):(this.set("sortProperties",[a]),this.set("sortAscending",!0))},actions:{setStage:function(a){this.set("stage",[a])}}}),App.NotificationsController=Ember.ArrayController.extend({needs:["application"],actions:{remove:function(a){a.deleteRecord();var b=function(){console.log("successfully deleted notification"),this.get("controllers.application").send("setNotification","success","Success","Notificaiton deleted.")},c=function(){this.get("controllers.application").send("setNotification","failure","Failed","Unable to delete this notification."),a.rollback()};a.save().then(b,c)}}}),App.NotificationsCreateController=Ember.Controller.extend({needs:["application","sessions"],currentUsername:function(){return this.get("controllers.sessions.currentUser").username}.property("controllers.sessions.currentUser"),actions:{create:function(){var a=this,b=this.store.createRecord("notification",{title:a.get("newNotification.title"),message:a.get("newNotification.message"),created_by:a.get("currentUsername"),date:moment($.now()).format("YYYY-MM-DD HH:mm:ss z")}),c=function(){a.get("controllers.application").send("setNotification","success","Success","Notification created successfully."),a.transitionToRoute("notifications")},d=function(b){a.store.deleteRecord(b),a.get("controllers.application").send("setNotification","failure","Failre","Unable to create notificatoin."),a.transitionToRoute("notifications")};b.save().then(c,d)},cancel:function(){this.transitionToRoute("notifications")}}}),App.NotificationsEditController=Ember.ObjectController.extend({needs:["application"],actions:{edit:function(a){var b=this;this.store.find("notification",a.id).then(function(a){a.set("title",b.get("title")),a.set("message",b.get("message")),a.set("created_by",b.get("controllers.application.currentUser").username),a.set("date",moment($.now()).format("YYYY-MM-DD HH:mm:ss z"));var c=function(){b.controllerFor("application").send("setNotification","success","Success","Notification updated successfully."),b.transitionToRoute("notifications")},d=function(){a.rollback(),b.get("controllers.application").send("setNotification","failure","Failre","Unable to edit notificatoin."),b.transitionToRoute("notifications")};a.save().then(c,d)})},cancel:function(){this.transitionToRoute("notifications")}}}),App.SessionsController=Ember.Controller.extend({init:function(){this._super(),Ember.$.cookie.json=!0,Ember.$.cookie("access_token")&&Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+Ember.$.cookie("access_token")}})},attemptedTransition:null,token:Ember.$.cookie("access_token"),currentUser:function(){return"string"==typeof Ember.$.cookie("auth_user")?JSON.parse(Ember.$.cookie("auth_user")):Ember.$.cookie("auth_user")}.property(),lastRequest:Ember.$.cookie("last_request"),admin:function(){return Ember.$.cookie("admin_token")===!0?!0:!1}.property(),tokenChanged:function(){Ember.isEmpty(this.get("token"))?(Ember.$.removeCookie("access_token"),Ember.$.removeCookie("auth_user"),Ember.$.removeCookie("admin_token")):(Ember.$.cookie("access_token",this.get("token")),Ember.$.cookie("auth_user",this.get("currentUser")),Ember.$.cookie("admin_token",this.get("admin")))}.observes("token"),reset:function(){this.setProperties({username:null,password:null,token:null,currentUser:null}),Ember.$.ajaxSetup({headers:{Authorization:"Bearer none"}})},actions:{login:function(){var a=this,b=this.get("attemptedTransition"),c={grant_type:"password",username:this.get("username"),password:this.get("password")};Ember.$.ajax({url:"/service/auth/token",data:c,dataType:"json",type:"POST",success:function(c){Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+c.api_key[0].access_token.string}}),a.setProperties({username:null,password:null});var d=a.get("store").createRecord("apiKey",{accessToken:c.api_key[0].access_token.string});a.store.find("user",c.api_key[0].user_id.string).then(function(e){a.setProperties({token:c.api_key[0].access_token.string,currentUser:{id:c.api_key[0].user_id.string,name:e.get("name"),email:e.get("email"),username:e.get("username")},admin:e.get("admin"),lastRequest:$.now()}),d.set("user",e),d.save(),e.get("apiKeys").content.push(d),b?(b.retry(),a.set("attemptedTransition",null)):a.transitionToRoute("index")})},error:function(a){401===a.status&&alert("Wrong user or password, please try again"),console.log(a)}})}}}),App.SummaryController=Ember.ArrayController.extend({needs:["application"],actions:{testNotify:function(){this.get("controllers.application").send("setNotification","success","Success","Notificaiton deleted.")}}}),App.UsersController=Ember.ArrayController.extend({needs:["application"],actions:{resetPW:function(){},remove:function(a){var b=this;a.deleteRecord();var c=function(){b.get("controllers.application").send("setNotification","success","Success","User deleted.")},d=function(){b.get("controllers.application").send("setNotification","failure","Failed","Unable to delete this user."),a.rollback()};a.save().then(c,d)}}}),App.UsersCreateController=Ember.Controller.extend({needs:["application"],actions:{create:function(){var a=this,b=this.store.createRecord("user",{username:a.get("newUser.username"),name:a.get("newUser.name"),email:a.get("newUser.email"),admin:a.get("newUser.admin"),scanner:a.get("newUser.scanner"),user_created_date:moment($.now()).format("YYYY-MM-DD HH:mm:ss z")}),c=function(){a.get("controllers.application").send("setNotification","success","Success","User created successfully."),a.transitionToRoute("users")},d=function(b){a.store.deleteRecord(b),a.get("controllers.application").send("setNotification","failure","Failed","Unable to create this user"),a.transitionToRoute("users")};b.save().then(c,d)},cancel:function(){this.setProperties({username:null,name:null,email:null,admin:null,scanner:null}),this.transitionToRoute("users")}}}),App.UsersEditController=Ember.ObjectController.extend({needs:["application"],actions:{edit:function(a){var b=this;this.store.find("user",a.id).then(function(a){a.set("name",b.get("name")),a.set("email",b.get("email")),a.set("admin",b.get("admin")),a.set("scanner",b.get("scanner"));var c=function(){b.get("controllers.application").send("setNotification","success","Success","User updated successfully."),b.transitionToRoute("users")},d=function(){notification.rollback(),b.get("controllers.application").send("setNotification","failure","Failed","Unable to edit this user."),b.transitionToRoute("users")};a.save().then(c,d)})},cancel:function(){this.transitionToRoute("notifications")}}}),App.ApiKey=DS.Model.extend({accessToken:DS.attr("string"),user:DS.belongsTo("user")}),App.Item=DS.Model.extend({rfid:DS.attr("string"),item_id:DS.attr("string"),description:DS.attr("string"),created_by:DS.attr("string"),created_date:DS.attr("simpledate"),current_revision:DS.attr("string"),current_revision_date:DS.attr("simpledate"),current_stage:DS.attr("string"),last_status_change_date:DS.attr("simpledate"),last_status_change_user:DS.attr("string"),stage1_user:DS.attr("string"),stage1_date:DS.attr("simpledate"),stage2_user:DS.attr("string"),stage2_date:DS.attr("simpledate"),stage3_user:DS.attr("string"),stage3_date:DS.attr("simpledate"),stage4_user:DS.attr("string"),stage4_date:DS.attr("simpledate"),stage5_user:DS.attr("string"),stage5_date:DS.attr("simpledate"),stage6_user:DS.attr("string"),stage6_date:DS.attr("simpledate"),stage7_user:DS.attr("string"),stage7_date:DS.attr("simpledate"),stage0_user:DS.attr("string"),stage0_date:DS.attr("simpledate")}),App.Notification=DS.Model.extend({title:DS.attr("string"),date:DS.attr("simpledate"),created_by:DS.attr("string"),message:DS.attr("string")}),App.User=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),name:DS.attr("string"),email:DS.attr("string"),last_login_date:DS.attr("simpledate"),user_created_date:DS.attr("simpledate"),admin:DS.attr("boolean"),scanner:DS.attr("boolean"),apiKeys:DS.hasMany("apiKey")}),App.Router.map(function(){this.resource("summary"),this.resource("items",function(){this.resource("item",{path:"/:item"})}),this.resource("user",{path:"/user/:user_id"}),this.resource("admin",function(){this.resource("notifications",function(){this.route("create"),this.route("edit",{path:"/edit/:id"})}),this.resource("users",function(){this.route("create"),this.route("edit",{path:"/edit/:id"})}),this.resource("settings")}),this.resource("sessions")}),App.AuthenticatedRoute=Ember.Route.extend({beforeModel:function(a){if(Ember.isEmpty(this.controllerFor("sessions").get("token")))return this.redirectToLogin(a);var b=$.now(),c=this.controllerFor("sessions").get("lastRequest");return console.log("current time: ["+b+"] last time: ["+c+"]"),b-c>6e5?(this.controllerFor("sessions").reset(),this.redirectToLogin(a)):void this.controllerFor("sessions").set("lastRequest",$.now())},redirectToLogin:function(a){return this.controllerFor("sessions").set("attemptedTransition",a),this.transitionTo("sessions")},actions:{error:function(a,b){401===a.status?(this.controllerFor("sessions").reset(),this.redirectToLogin(b)):console.log(a.status)}}}),App.AdminRoute=App.AuthenticatedRoute.extend({}),App.ApplicationRoute=Ember.Route.extend({actions:{logout:function(){this.controllerFor("sessions").reset(),this.transitionTo("sessions")},error:function(a){return a&&401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):void 0}}}),App.IndexRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("notification")},actions:{error:function(a){return 401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):void console.log(a.status)}}}),App.ItemsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")}}),App.ListRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")}}),App.NotificationsCreateRoute=App.AuthenticatedRoute.extend({setupController:function(a,b){a.set("newNotification",b)}}),App.NotificationsEditRoute=App.AuthenticatedRoute.extend({}),App.NotificationsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("notification")}}),App.SecretRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("user")}}),App.SessionsRoute=Ember.Route.extend({beforeModel:function(){Ember.isEmpty(this.controllerFor("sessions").get("token"))||this.transitionTo("index")}}),App.SettingsRoute=App.AuthenticatedRoute.extend({}),App.SummaryRoute=App.AuthenticatedRoute.extend({}),App.UserRoute=App.AuthenticatedRoute.extend({}),App.UsersCreateRoute=App.AuthenticatedRoute.extend({setupController:function(a,b){a.set("newUser",b)}}),App.UsersEditRoute=App.AuthenticatedRoute.extend({}),App.UsersRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("user")}});