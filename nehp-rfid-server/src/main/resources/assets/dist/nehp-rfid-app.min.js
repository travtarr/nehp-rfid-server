/*! nehp-rfid-app 16-02-2015 */
window.App=Ember.Application.create({LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_ACTIVE_GENERATION:!0,LOG_RESOLVER:!0,rootElement:"body"}),App.ApplicationAdapter=DS.RESTAdapter.extend({namespace:"service"}),App.ApiKeyAdapter=DS.LSAdapter.extend({namespace:"nehp-rfid"}),App.Store=DS.Store.extend({revision:12,adapter:App.ApplicationAdapter.create()}),App.SimpledateTransform=DS.Transform.extend({deserialize:function(a){var b=jstz.determine();return a?moment.tz(a,b.name()).format("YYYY-MM-DD HH:mm:ss z"):a},serialize:function(a){return a?moment.utc(a).toDate():a}}),App.NotifyAlertComponent=Ember.Component.extend({classNameBindings:[":notify","isOpaque"],isOpaque:!1,timeoutId:null,hideAfterMs:5e3,didInsertElement:function(){this.set("closed",!1),this.set("timeoutId",setTimeout(function(){this.send("close")}.bind(this),this.get("hideAfterMs"))),Ember.run.later(this,function(){this.set("isOpaque",!0)},1)},actions:{close:function(){this.set("isOpaque, false"),setTimeout(function(){this.set("notification.closed",!0),clearTimeout(this.get("timeoutId"))}.bind(this),300)}}});var config={baseURL:"54.85.61.143:8080"};App.ApplicationController=Ember.Controller.extend({needs:["sessions"],notification:{type:null,title:null,message:null,closed:!0},currentUser:function(){return this.get("controllers.sessions.currentUser")}.property("controllers.sessions.currentUser"),isAdmin:function(){return this.get("controllers.sessions.admin")}.property("controllers.sessions.admin"),isAuthenticated:function(){return!Ember.isEmpty(this.get("controllers.sessions.currentUser.username"))}.property("controllers.sessions.currentUser"),actions:{setNotification:function(a,b,c){var d={type:a,title:b,message:c,closed:!1};this.set("notification",d)}}}),App.ChangeController=Ember.Controller.extend({needs:["application"],actions:{change:function(){if(this.get("password")==this.get("verify-password")){_this=this;var a={username:this.get("controllers.application.currentUser").username,password:this.get("password")};Ember.$.ajax({url:"/service/users/pwchange",data:a,type:"POST",success:function(){_this.get("controllers.application").send("setNotification","success","Success","Thank you for updating your password."),_this.transitionToRoute("index")},error:function(){_this.get("controllers.application").send("setNotification","failure","Failure","Failed to update your password.")}})}else this.get("controllers.application").send("setNotification","failure","Failure","Passwords are not equal.")}}}),App.IndexController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!1}),App.ItemController=Ember.ObjectController.extend({}),App.ItemsController=Ember.ArrayController.extend({sortProperties:["rfid"],stage:"ALL",sortedColumn:function(){var a=this.get("sortProperties");return a?a.get("firstObject"):void 0}.property("sortProperties.[]"),filteredItems:function(){var a=this.get("stage"),b=this.get("arrangedContent");return"ALL"==a?b:b.filter(function(b){return b.get("current_stage")==a})}.property("stage","arrangedContent"),actions:{setStage:function(a){this.set("stage",[a])},toggleSort:function(a){this.get("sortedColumn")==a?this.toggleProperty("sortAscending"):(this.set("sortProperties",[a]),this.set("sortAscending",!0))},goToItem:function(a){this.transitionToRoute("item",a)}}}),App.NotificationsController=Ember.ArrayController.extend({needs:["application"],actions:{remove:function(a){a.deleteRecord();var b=function(){console.log("successfully deleted notification"),this.get("controllers.application").send("setNotification","success","Success","Notificaiton deleted.")},c=function(){this.get("controllers.application").send("setNotification","failure","Failed","Unable to delete this notification."),a.rollback()};a.save().then(b,c)}}}),App.NotificationsCreateController=Ember.Controller.extend({needs:["application","sessions"],currentUsername:function(){return this.get("controllers.sessions.currentUser").username}.property("controllers.sessions.currentUser"),actions:{create:function(){var a=this,b=this.store.createRecord("notification",{title:a.get("newNotification.title"),message:a.get("newNotification.message"),created_by:a.get("currentUsername"),date:moment($.now()).format("YYYY-MM-DD HH:mm:ss z")}),c=function(){a.get("controllers.application").send("setNotification","success","Success","Notification created successfully."),a.transitionToRoute("notifications")},d=function(b){a.store.deleteRecord(b),a.get("controllers.application").send("setNotification","failure","Failre","Unable to create notificatoin."),a.transitionToRoute("notifications")};b.save().then(c,d)},cancel:function(){this.transitionToRoute("notifications")}}}),App.NotificationsEditController=Ember.ObjectController.extend({needs:["application"],actions:{edit:function(a){var b=this;this.store.find("notification",a.id).then(function(a){a.set("title",b.get("title")),a.set("message",b.get("message")),a.set("created_by",b.get("controllers.application.currentUser").username),a.set("date",moment($.now()).format("YYYY-MM-DD HH:mm:ss z"));var c=function(){b.controllerFor("application").send("setNotification","success","Success","Notification updated successfully."),b.transitionToRoute("notifications")},d=function(){a.rollback(),b.get("controllers.application").send("setNotification","failure","Failre","Unable to edit notificatoin."),b.transitionToRoute("notifications")};a.save().then(c,d)})},cancel:function(){this.transitionToRoute("notifications")}}}),App.ResetController=Ember.Controller.extend({needs:["application"],actions:{reset:function(){_this=this;var a={email:this.get("email")};Ember.$.ajax({url:"/service/users/pwreset-email",data:a,type:"POST",success:function(){_this.get("controllers.application").send("setNotification","success","Success","An email will be sent to you shortly to reset your password."),_this.transitionToRoute("sessions")},error:function(){_this.get("controllers.application").send("setNotification","failure","Failure","Password reset failed, please verify your email address.")}})},cancel:function(){this.transitionToRoute("sessions")}}}),App.SessionsController=Ember.Controller.extend({needs:["application"],init:function(){this._super(),Ember.$.cookie.json=!0,Ember.$.cookie("access_token")&&Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+Ember.$.cookie("access_token")}})},attemptedTransition:null,cookiesEnabled:!1,rawToken:null,token:function(){return Ember.$.cookie("access_token")?Ember.$.cookie("access_token"):this.get("rawToken")}.property("rawToken"),currentUser:function(){return Ember.$.cookie("auth_user")?"string"==typeof Ember.$.cookie("auth_user")?JSON.parse(Ember.$.cookie("auth_user")):Ember.$.cookie("auth_user"):void 0}.property("rawToken"),lastRequest:function(){return Ember.$.cookie("last_request")?Ember.$.cookie("last_request"):void 0}.property(),admin:function(){return Ember.$.cookie("admin_token")?Ember.$.cookie("admin_token")===!0?!0:!1:this.get("user.admin")}.property("user.admin"),tokenChanged:function(){Ember.isEmpty(this.get("token"))?(Ember.$.removeCookie("access_token"),Ember.$.removeCookie("auth_user"),Ember.$.removeCookie("admin_token"),Ember.$.removeCookie("last_request")):this.get("cookiesEnabled")&&(Ember.$.cookie("access_token",this.get("rawToken")),Ember.$.cookie("auth_user",this.get("currentUser")),Ember.$.cookie("admin_token",this.get("user.admin")),Ember.$.cookie("last_request",$.now()))}.observes("rawToken"),reset:function(){this.setProperties({username:null,password:null,rawToken:null,token:null,currentUser:null,cookiesEnabled:!1}),Ember.$.ajaxSetup({headers:{Authorization:"Bearer none"}})},actions:{forgotPW:function(){this.transitionToRoute("reset")},login:function(){var a=this,b=this.get("attemptedTransition"),c={grant_type:"password",username:this.get("username"),password:this.get("password")};this.get("remember")||(Ember.$.cookie("access_token")&&Ember.$.removeCookie("access_token"),Ember.$.cookie("auth_user")&&Ember.$.removeCookie("auth_user"),Ember.$.cookie("admin_token")&&Ember.$.removeCookie("admin_token"),Ember.$.cookie("last_request")&&Ember.$.removeCookie("last_request")),Ember.$.ajax({url:"/service/auth/token",data:c,dataType:"json",type:"POST",success:function(c){Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+c.api_key[0].access_token.string}}),a.setProperties({username:null,password:null});var d=a.get("store").createRecord("apiKey",{accessToken:c.api_key[0].access_token.string});a.store.find("user",c.api_key[0].user_id.string).then(function(e){a.setProperties({rawToken:c.api_key[0].access_token.string,token:c.api_key[0].access_token.string,currentUser:{id:c.api_key[0].user_id.string,setting:e.get("setting"),name:e.get("name"),email:e.get("email"),username:e.get("username"),admin:e.get("admin")},admin:e.get("admin"),lastRequest:$.now(),cookiesEnabled:a.get("remember")}),d.set("user",e),d.save(),e.get("apiKeys").content.push(d),e.get("password_reset")?a.transitionToRoute("change"):b?(b.retry(),a.set("attemptedTransition",null)):a.transitionToRoute("index")})},error:function(a){401===a.status&&this.get("controllers.application").send("setNotification","failure","Failure","Username and/or Password incorrect. Please try again."),console.log(a)}})}}}),App.SummaryController=Ember.ArrayController.extend({sortProperties:["rfid"],stage:"ALL",sortedColumn:function(){var a=this.get("sortProperties");return a?a.get("firstObject"):void 0}.property("sortProperties.[]"),filteredItems:function(){var a=this.get("stage"),b=this.get("arrangedContent");return"ALL"==a?b:b.filter(function(b){return b.get("current_stage")==a})}.property("stage","arrangedContent"),actions:{setStage:function(a){this.set("stage",[a])},toggleSort:function(a){this.get("sortedColumn")==a?this.toggleProperty("sortAscending"):(this.set("sortProperties",[a]),this.set("sortAscending",!0))}}}),App.UserController=Ember.Controller.extend({}),App.UsersController=Ember.ArrayController.extend({needs:["application"],actions:{resetPW:function(){},remove:function(a){var b=this;a.deleteRecord();var c=function(){b.get("controllers.application").send("setNotification","success","Success","User deleted.")},d=function(){b.get("controllers.application").send("setNotification","failure","Failed","Unable to delete this user."),a.rollback()};a.save().then(c,d)}}}),App.UsersCreateController=Ember.Controller.extend({needs:["application"],actions:{create:function(){var a=this,b=this.store.createRecord("user",{username:a.get("newUser.username"),name:a.get("newUser.name"),email:a.get("newUser.email"),admin:a.get("newUser.admin"),scanner:a.get("newUser.scanner"),user_created_date:moment($.now()).format("YYYY-MM-DD HH:mm:ss z")}),c=function(){a.get("controllers.application").send("setNotification","success","Success","User created successfully."),a.transitionToRoute("users")},d=function(b){a.store.deleteRecord(b),a.get("controllers.application").send("setNotification","failure","Failed","Unable to create this user"),a.transitionToRoute("users")};b.save().then(c,d)},cancel:function(){this.setProperties({username:null,name:null,email:null,admin:null,scanner:null}),this.transitionToRoute("users")}}}),App.UsersEditController=Ember.ObjectController.extend({needs:["application"],actions:{edit:function(a){var b=this;this.store.find("user",a.id).then(function(a){a.set("name",b.get("name")),a.set("email",b.get("email")),a.set("admin",b.get("admin")),a.set("scanner",b.get("scanner"));var c=function(){b.get("controllers.application").send("setNotification","success","Success","User updated successfully."),b.transitionToRoute("users")},d=function(){notification.rollback(),b.get("controllers.application").send("setNotification","failure","Failed","Unable to edit this user."),b.transitionToRoute("users")};a.save().then(c,d)})},cancel:function(){this.transitionToRoute("notifications")}}}),App.ApiKey=DS.Model.extend({accessToken:DS.attr("string"),user:DS.belongsTo("user")}),App.Item=DS.Model.extend({rfid:DS.attr("string"),item_id:DS.attr("string"),comment:DS.attr("string"),reason:DS.attr("string"),printed:DS.attr("boolean"),group:DS.attr("number"),created_by:DS.attr("string"),created_date:DS.attr("simpledate"),current_revision:DS.attr("string"),current_revision_date:DS.attr("simpledate"),current_stage:DS.attr("string"),current_stage_num:DS.attr("number"),last_status_change_date:DS.attr("simpledate"),last_status_change_user:DS.attr("string"),stage1_user:DS.attr("string"),stage1_date:DS.attr("simpledate"),stage2_user:DS.attr("string"),stage2_date:DS.attr("simpledate"),stage3_user:DS.attr("string"),stage3_date:DS.attr("simpledate"),stage4_user:DS.attr("string"),stage4_date:DS.attr("simpledate"),stage5_user:DS.attr("string"),stage5_date:DS.attr("simpledate"),stage6_user:DS.attr("string"),stage6_date:DS.attr("simpledate"),stage7_user:DS.attr("string"),stage7_date:DS.attr("simpledate"),stage0_user:DS.attr("string"),stage0_date:DS.attr("simpledate")}),App.Notification=DS.Model.extend({title:DS.attr("string"),date:DS.attr("simpledate"),created_by:DS.attr("string"),message:DS.attr("string")}),App.Setting=DS.Model.extend({user:DS.attr("number"),user_changed:DS.attr("boolean"),stage1:DS.attr("string"),stage2:DS.attr("string"),stage3:DS.attr("string"),stage4:DS.attr("string"),stage5:DS.attr("string"),stage6:DS.attr("string"),stage7:DS.attr("string"),stage0:DS.attr("string")}),App.User=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),password_reset:DS.attr("boolean"),name:DS.attr("string"),email:DS.attr("string"),setting:DS.attr("number"),last_login_date:DS.attr("simpledate"),user_created_date:DS.attr("simpledate"),admin:DS.attr("boolean"),scanner:DS.attr("boolean"),apiKeys:DS.hasMany("apiKey")}),App.Router.map(function(){this.resource("summary"),this.resource("items",function(){this.resource("item",{path:"/:item_id"})}),this.resource("user",{path:"/user/:user_id"},function(){this.route("info"),this.route("settings")}),this.resource("admin",function(){this.resource("notifications",function(){this.route("create"),this.route("edit",{path:"/edit/:id"})}),this.resource("users",function(){this.route("create"),this.route("edit",{path:"/edit/:id"})}),this.route("settings")}),this.resource("sessions"),this.route("reset"),this.route("change")}),App.AuthenticatedRoute=Ember.Route.extend({beforeModel:function(a){if(Ember.isEmpty(this.controllerFor("sessions").get("token")))return this.redirectToLogin(a);var b=$.now(),c=this.controllerFor("sessions").get("lastRequest");return b-c>6e5?(this.controllerFor("sessions").reset(),this.redirectToLogin(a)):void this.controllerFor("sessions").set("lastRequest",$.now())},redirectToLogin:function(a){return this.controllerFor("sessions").set("attemptedTransition",a),this.transitionTo("sessions")},actions:{error:function(a,b){401===a.status?(this.controllerFor("sessions").reset(),this.redirectToLogin(b)):console.log(a.status)}}}),App.AdminRoute=App.AuthenticatedRoute.extend({}),App.AdminSettingsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("setting",{admin:!0}).then(function(a){for(var b=a.get("content")[0],c={},d=0;8>d;d++){var e=b.get("stage"+d),f=Math.floor(e/24),g=e%24;c["stage"+d+"day"]=f,c["stage"+d+"hour"]=g}return c})},actions:{edit:function(){var a=this;this.store.find("setting",{admin:!0}).then(function(b){for(var c=b.get("content")[0],d=0;8>d;d++){var e=24*a.get("stage"+d+"day")+a.get("stage"+d+"hour");c.set("stage"+d,e)}Ember.$.ajax({url:"/service/settings/admin",data:c,dataType:"json",type:"PUT",success:function(){a.controllerFor("application").send("setNotification","success","Success","Setting updated successfully."),a.transitionToRoute("settings")},error:function(){a.controllerFor("application").send("setNotification","failure","Failed","Unable to edit this setting."),a.transitionToRoute("settings")}})})}}}),App.ApplicationRoute=Ember.Route.extend({image:null,actions:{logout:function(){this.controllerFor("sessions").reset(),this.transitionTo("sessions")},error:function(a){return a&&401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):void 0}}}),App.IndexRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("notification")},actions:{error:function(a){return 401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):void console.log(a.status)}}}),App.ItemRoute=App.AuthenticatedRoute.extend({model:function(a){return this.store.find("item",a.item_id)},actions:{showImage:function(a){var b="data:image/gif;base64,"+$.getJSON("/service/signature/"+this.currentModel.get("id")+"/"+a);this.set("image",b),this.render("modal",{into:"application",outlet:"modal"})},closeImage:function(){this.render("nothing",{into:"application",outlet:"modal"})}}}),App.ItemsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")},actions:{excelFilter:function(){var a="<table>",b=this;$(b).find("thead").find("tr").each(function(){a+="<tr>",$(this).filter(":visible").find("th").each(function(b){"none"!=$(this).css("display")&&-1==defaults.ignoreColumn.indexOf(b)&&(a+="<td>"+parseString($(this))+"</td>")}),a+="</tr>"});var c=1;$(b).find("tbody").find("tr").each(function(){a+="<tr>";var b=0;$(this).filter(":visible").find("td").each(function(c){"none"!=$(this).css("display")&&-1==defaults.ignoreColumn.indexOf(c)&&(a+="<td>"+parseString($(this))+"</td>"),b++}),c++,a+="</tr>"}),a+="</table>";var d="<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>";d+="<head>",d+="<!--[if gte mso 9]>",d+="<xml>",d+="<x:ExcelWorkbook>",d+="<x:ExcelWorksheets>",d+="<x:ExcelWorksheet>",d+="<x:Name>",d+="{worksheet}",d+="</x:Name>",d+="<x:WorksheetOptions>",d+="<x:DisplayGridlines/>",d+="</x:WorksheetOptions>",d+="</x:ExcelWorksheet>",d+="</x:ExcelWorksheets>",d+="</x:ExcelWorkbook>",d+="</xml>",d+="<![endif]-->",d+="</head>",d+="<body>",d+=a,d+="</body>",d+="</html>";var e="base64,"+$.base64.encode(d);window.open("data:application/vnd.ms-excel;filename=exportData.xls;"+e)},excel:function(){},allexcel:function(){var a="<table>";a+="<tr>",App.Item.eachAttribute(function(b){a+="<td>"+b+"</td>"}),a+="</tr>",this.store.find("item").then(function(b){b.forEach(function(b){jsonItem=b.toJSON(),a+="<tr>",$.each(jsonItem,function(b,c){a+=null===c?"<td></td>":"<td>"+c+"</td>"}),a+="</tr>"}),a+="</table>";var c="<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>";c+="<head>",c+="<!--[if gte mso 9]>",c+="<xml>",c+="<x:ExcelWorkbook>",c+="<x:ExcelWorksheets>",c+="<x:ExcelWorksheet>",c+="<x:Name>",c+="{worksheet}",c+="</x:Name>",c+="<x:WorksheetOptions>",c+="<x:DisplayGridlines/>",c+="</x:WorksheetOptions>",c+="</x:ExcelWorksheet>",c+="</x:ExcelWorksheets>",c+="</x:ExcelWorkbook>",c+="</xml>",c+="<![endif]-->",c+="</head>",c+="<body>",c+=a,c+="</body>",c+="</html>";var d="base64,"+$.base64.encode(c);window.open("data:application/vnd.ms-excel;filename=exportData.xls;"+d)})},excelDuration:function(){$.get("/service/reports/duration/hours").done(function(a){window.open("data:application/vnd.ms-excel;filename=exportData.xls;"+a)})}}}),App.ListRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")}}),App.NotificationsCreateRoute=App.AuthenticatedRoute.extend({setupController:function(a,b){a.set("newNotification",b)}}),App.NotificationsEditRoute=App.AuthenticatedRoute.extend({}),App.NotificationsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("notification")}}),App.ResetRoute=Ember.Route.extend({actions:{reset:function(){var a=this,b=function(){var b=/^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;return b.test(a.get("email"))?a.get("email"):"null"};if("null"!==b){var c={email:b};Ember.$.ajax({url:"/service/users/pwreset-email",data:c,type:"POST",success:function(){a.get("controllers.application").send("setNotification","success","Success","An email should be arriving shortly to update your password."),a.transitionToRoute("index")},error:function(){a.get("controllers.application").send("setNotification","failure","Failure","Email not recognized.")}})}else a.get("controllers.application").send("setNotification","failure","Failure","Not a valid email.")}}}),App.SessionsRoute=Ember.Route.extend({beforeModel:function(){Ember.isEmpty(this.controllerFor("sessions").get("token"))||this.transitionTo("index")}}),App.SummaryRoute=App.AuthenticatedRoute.extend({model:function(){var a=this;return this.store.find("item").then(function(){return Ember.$.getJSON("service/settings/"+a.controllerFor("application").get("currentUser.id")).then(function(b){var c=b.setting;return a.store.filter("item",function(a){var b=a.get("current_stage"),d=0;switch(b){case"STOPPED":d=0;break;case"MODELING":d=1;break;case"KITTING":d=2;break;case"MANUFACTURING":d=3;break;case"QA/QC":d=4;break;case"SHIPPED":d=5;break;case"ARRIVAL":d=6;break;case"INSTALLED":d=7}var e=a.get("stage"+d+"_date");if(null!==e){var f=moment($.now()),g=f.diff(moment(e),"days");if(g>c["stage"+d])return a}})})})}}),App.UserInfoRoute=App.AuthenticatedRoute.extend({actions:{edit:function(a){var b=this;this.get("newpassword")==this.get("verify-password")?this.store.find("user",a.id).then(function(a){a.set("name",b.get("name")),a.set("email",b.get("email")),a.set("password",b.get("newpassword"));var c=function(){b.controllerFor("application").send("setNotification","success","Success","User updated successfully."),b.transitionToRoute("index")},d=function(){notification.rollback(),b.get("controllers.application").send("setNotification","failure","Failre","Unable to edit user."),b.transitionToRoute("user")};a.save().then(c,d)}):b.get("controllers.application").send("setNotification","failure","Failre","Unable to edit user. Please verify passwords match.")}}}),App.UserRoute=App.AuthenticatedRoute.extend({}),App.UserSettingsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("setting",this.controllerFor("application").get("currentUser.setting")).then(function(a){for(var b={},c=0;8>c;c++){var d=a.get("stage"+c),e=Math.floor(d/24),f=d%24;b["stage"+c+"day"]=e,b["stage"+c+"hour"]=f}return b})},actions:{edit:function(){var a=this;this.store.find("setting",this.controllerFor("application").get("currentUser.setting")).then(function(b){for(var c=0;8>c;c++){var d=24*parseInt(a.get("stage"+c+"day"),10)+parseInt(a.get("stage"+c+"hour"),10);b.set("stage"+c,d)}var e=function(){a.controllerFor("application").send("setNotification","success","Success","Setting updated successfully."),a.transitionToRoute("settings")},f=function(){b.rollback(),a.controllerFor("application").send("setNotification","failure","Failed","Unable to edit this setting."),a.transitionToRoute("settings")};b.save().then(e,f)})}}}),App.UsersCreateRoute=App.AuthenticatedRoute.extend({setupController:function(a,b){a.set("newUser",b)}}),App.UsersEditRoute=App.AuthenticatedRoute.extend({}),App.UsersRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("user")}}),App.ModalView=Ember.View.Extend({didInsertElement:function(){this.$(".modal, .modal-backdrop").addClass("in")},layoutName:"modal_layout",close:function(){var a=this;this.$(".modal").one("transitionend",function(){a.controller.send("close")}),this.$(".modal, .modal-backdrop").removeClass("in")}});