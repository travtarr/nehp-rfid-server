/*! nehp-rfid-app 20-10-2014 */
window.App=Ember.Application.create({LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_ACTIVE_GENERATION:!0,LOG_RESOLVER:!0,rootElement:"body"}),App.ApplicationAdapter=DS.RESTAdapter.extend({namespace:"service"}),App.ApiKeyAdapter=DS.LSAdapter.extend({namespace:"nehp-rfid"}),App.Store=DS.Store.extend({revision:12,adapter:App.ApplicationAdapter.create()});var config={baseURL:"54.85.61.143:8080"};App.Controller=Ember.ArrayController.extend({needs:["sessions"],currentUser:function(){return this.get("controllers.sessions.currentUser")}.property("controllers.sessions.currentUser"),isAdmin:function(){return this.get("controllers.sessions.admin")}.property("controllers.sessions.admin"),isAuthenticated:function(){return!Ember.isEmpty(this.get("controllers.sessions.currentUser"))}.property("controllers.sessions.currentUser")}),App.IndexController=Ember.ArrayController.extend({sortProperties:["date"],sortAscending:!1}),App.ItemsController=Ember.ArrayController.extend({sortProperties:["rfid"],stage:"ALL",filteredItems:function(){var a=this.get("stage"),b=this.get("arrangedContent");return"ALL"==a?b:b.filter(function(b){return b.get("current_stage")==a})}.property("stage","arrangedContent"),actions:{setStage:function(a){this.set("stage",[a])}}}),App.SessionsController=Ember.Controller.extend({init:function(){this._super(),Ember.$.cookie("access_token")&&Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+Ember.$.cookie("access_token")}})},attemptedTransition:null,token:Ember.$.cookie("access_token"),currentUser:Ember.$.cookie("auth_user"),admin:Ember.$.cookie("admin_token"),tokenChanged:function(){Ember.isEmpty(this.get("token"))?(Ember.$.removeCookie("access_token"),Ember.$.removeCookie("auth_user"),Ember.$.removeCookie("admin_token")):(Ember.$.cookie("access_token",this.get("token")),Ember.$.cookie("auth_user",this.get("currentUser")),Ember.$.cookie("admin_token",this.get("admin")))}.observes("token"),reset:function(){this.setProperties({username:null,password:null,token:null,currentUser:null}),Ember.$.ajaxSetup({headers:{Authorization:"Bearer none"}})},actions:{login:function(){var a=this,b=this.get("attemptedTransition"),c={grant_type:"password",username:this.get("username"),password:this.get("password")};Ember.$.ajax({url:"/service/auth/token",data:c,dataType:"json",type:"POST",success:function(c){Ember.$.ajaxSetup({headers:{Authorization:"Bearer "+c.api_key[0].access_token.string}}),a.setProperties({username:null,password:null});var d=a.get("store").createRecord("apiKey",{accessToken:c.api_key[0].access_token.string});a.store.find("user",c.api_key[0].user_id.string).then(function(e){console.log(JSON.stringify(e)),console.log(e),a.setProperties({token:c.api_key[0].access_token.string,currentUser:e.getProperties("username","name","email"),admin:e.getProperties("admin")}),d.set("user",e),d.save(),e.get("apiKeys").content.push(d),b?(b.retry(),a.set("attemptedTransition",null)):a.transitionToRoute("index")})},error:function(a){401===a.status&&alert("Wrong user or password, please try again"),console.log(a)}})}}}),App.ApiKey=DS.Model.extend({accessToken:DS.attr("string"),user:DS.belongsTo("user")}),App.Item=DS.Model.extend({rfid:DS.attr("string"),item_id:DS.attr("string"),description:DS.attr("string"),created_by:DS.attr("string"),created_date:DS.attr("date"),current_revision:DS.attr("string"),current_revision_date:DS.attr("date"),current_stage:DS.attr("string"),last_status_change_date:DS.attr("date"),last_status_change_user:DS.attr("string"),stage1_user:DS.attr("string"),stage1_date:DS.attr("date"),stage2_user:DS.attr("string"),stage2_date:DS.attr("date"),stage3_user:DS.attr("string"),stage3_date:DS.attr("date"),stage4_user:DS.attr("string"),stage4_date:DS.attr("date"),stage5_user:DS.attr("string"),stage5_date:DS.attr("date"),stage6_user:DS.attr("string"),stage6_date:DS.attr("date"),stage7_user:DS.attr("string"),stage7_date:DS.attr("date"),stage0_user:DS.attr("string"),stage0_date:DS.attr("date")}),App.Notification=DS.Model.extend({title:DS.attr("string"),date:DS.attr("date"),created_by:DS.attr("string"),message:DS.attr("string")}),App.User=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),name:DS.attr("string"),email:DS.attr("string"),last_login_date:DS.attr("string"),user_created_date:DS.attr("string"),admin:DS.attr("boolean"),scanner:DS.attr("boolean"),apiKeys:DS.hasMany("apiKey")}),App.Router.map(function(){this.resource("summary",function(){}),this.resource("items",function(){this.resource("item",{path:"/:item"})}),this.resource("user",{path:"/user/:user_id"}),this.resource("admin",function(){}),this.resource("sessions",function(){this.route("login"),this.route("logout")})}),App.AdminRoute=Ember.Route.extend({beforeModel:function(a){return Ember.isEmpty(this.controllerFor("sessions").get("admin"))?this.redirectToHome(a):Ember.isEmpty(this.controllerFor("sessions").get("token"))?this.redirectToLogin(a):void 0},redirectToHome:function(){return this.transitionTo("index")},redirectToLogin:function(a){return this.controllerFor("sessions").set("attemptedTransition",a),this.transitionTo("sessions")},actions:{error:function(a,b){401===a.status?this.redirectToHome(b):console.log("unknown problem")}}}),App.ApplicationRoute=Ember.Route.extend({actions:{logout:function(){this.controllerFor("sessions").reset(),this.transitionTo("sessions")},error:function(a){return a&&401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):!0}}}),App.AuthenticatedRoute=Ember.Route.extend({beforeModel:function(a){return Ember.isEmpty(this.controllerFor("sessions").get("token"))?this.redirectToLogin(a):void 0},redirectToLogin:function(a){return this.controllerFor("sessions").set("attemptedTransition",a),this.transitionTo("sessions")},actions:{error:function(a,b){401===a.status?this.redirectToLogin(b):console.log(a.status)}}}),App.IndexRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("notification")},actions:{logout:function(){this.controllerFor("sessions").reset(),this.transitionTo("sessions")},error:function(a){return a&&401===a.status?(this.controllerFor("sessions").reset(),this.transitionTo("sessions")):!0}}}),App.ItemsRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")}}),App.ListRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("item")}}),App.SecretRoute=App.AuthenticatedRoute.extend({model:function(){return this.store.find("user")}}),App.SessionsRoute=Ember.Route.extend({beforeModel:function(){Ember.isEmpty(this.controllerFor("sessions").get("token"))||this.transitionTo("index")}}),App.SummaryRoute=App.AuthenticatedRoute.extend({}),App.UserRoute=App.AuthenticatedRoute.extend({});